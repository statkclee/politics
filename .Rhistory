devtools::install_github("rustyoldrake/WatsonR")
devtools::install_github("rustyoldrake/WatsonR")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
updateR()
sessionInfo()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("")
install.packages("devtools")
install.packages("devtools")
install.packages("C:/Users/KwangChun/AppData/Local/Temp/RtmpUVB2MD/downloaded_packages/curl_1.2.tar.gz", repos = NULL, type = "source")
install.pacakges("mime")
install.packages("mime")
Package which is only available in source form, and may need compilation of
getOption('repos')
install.packages("mime", repo='http://cran.ism.ac.jp/')
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths( c( .libPaths(),'C:/Users/KwangChun/Documents/R/win-library/3.3')
)
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths()
.libPaths( c( .libPaths(),"C:/Program Files/R/R-3.3.1/library"))
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths()
.libPaths("C:/Program Files/R/R-3.3.1/library")
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths()
.libPaths("C:/Users/KwangChun/Documents/R/win-library/3.3")
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths()
.libPaths("C:/Users/KwangChun/Documents/R/win-library/3.3")
install.packages("mime", repo='http://cran.ism.ac.jp/')
.libPaths("~")
install.packages("mime", repo='http://cran.ism.ac.jp/')
devtools::install_github("rustyoldrake/WatsonR")
devtools::install_github("rasmusab/bayesian_first_aid")
library(BayesianFirstAid)
bayes.binom.test(c(39, 25))
devtools::install_github("rasmusab/bayesian_first_aid", quick=TRUE)
install_github('hadley/ggplot2')
devtools::install_github('hadley/ggplot2')
install.packages("tibble")
devtools::install_github('hadley/ggplot2')
install.packages("ggplot2")
install.packages("BayesianFirstAid")
library(BayesianFirstAid)
bayes.binom.test(c(39, 25))
devtools::install_github("rasmusab/bayesian_first_aid", quick=TRUE)
install.packages("devtools")
library(devtools)
library("sparklyr", lib.loc="~/R/win-library/3.3")
library("sparklyr", lib.loc="~/R/win-library/3.3")
devtools::github_install("rstudio/sparklyr")
devtools::install_github("rstudio/sparklyr")
library(sparklyr)
library(sparklyr)
config <- spark_config()
config[["sparklyr.defaultPackages"]] <- NULL
sc <- spark_connect(master = "local", config = config)
Sys.setenv(SPARK_HOME="C:/spark-1.6.2-bin-hadoop2.6")
library(sparklyr)
sc <- spark_connect(master = "local")
iris_tbl <- copy_to(sc, iris)
library(sparklyr)
iris_tbl <- copy_to(sc, iris)
library(dplyr)
iris_tbl <- copy_to(sc, iris)
# 1. spark 클러스터 실행
library(sparklyr)
library(dplyr)
# 2. SPARK_HOME 설정
Sys.setenv(SPARK_HOME="C:/spark-1.6.2-bin-hadoop2.6")
# 3. 스파크 클러스터 생성
config <- spark_config()
config[["sparklyr.defaultPackages"]] <- NULL
sc <- spark_connect(master = "local", config = config)
# 4. iris 데이터셋 불러오기ibrary(dplyr)
iris_tbl <- copy_to(sc, iris)
f <- factor(c(1, 5, 10, 2))
as.numeric(f)               ## wrong! and there is no warning...
as.numeric(as.character(f)) ## works...
as.numeric(levels(f))[f]    ## The recommended way.
levels(f)
as.numeric(levels(f))
class(as.numeric(levels(f)))
as.numeric(levels(f))[f]
class(as.numeric(levels(f))[f])
f
as.numeric(levels(f))[f]
exprmt <- factor(c("treat1", "treat2", "treat1", "treat3", "treat1", "control", "treat1", "treat2", "treat3"))
plot(exprmt)
barplot(exprmt)
str(exprmt)
glimpse(exprmt)
library(dplyr)
glimpse(exprmt)
exprmt <- factor(exprmt, levels=c("treat1", "treat2", "treat3", "control"))
glimpse(exprmt)
plot(exprmt)
surveys %>%
group_by(sex, species_id) %>%
summarize(mean_weight = mean(weight, na.rm = TRUE))
library(readr)
surveys <- read_csv("C:/Users/KwangChun/AppData/Local/lxss/home/statkclee/surveys.csv")
View(surveys)
surveys %>%
group_by(sex, species_id) %>%
summarize(mean_weight = mean(weight, na.rm = TRUE)) %>% head
surveys %>%
group_by(sex, species_id) %>%
summarize(mean_weight = mean(weight, na.rm = TRUE))
library(broom)
library(dplyr)
tidy_methods <- methods("tidy")
glance_methods <- methods("glance")
augment_methods <- methods("augment")
tidy_methods <- data.frame(class = sub("tidy[.]", "",
as.vector(tidy_methods)),
tidy = "x",
stringsAsFactors=FALSE)
glance_methods <- data.frame(class = sub("glance[.]", "",
as.vector(glance_methods)),
glance = "x",
stringsAsFactors = FALSE)
augment_methods <- data.frame(class = sub("augment[.]", "",
as.vector(augment_methods)),
augment = "x",
stringsAsFactors = FALSE)
TidyMethods <- left_join(tidy_methods, glance_methods) %>%
left_join(augment_methods) %>%
mutate(tidy = ifelse(is.na(tidy), "", tidy),
glance = ifelse(is.na(glance), "", glance),
augment = ifelse(is.na(augment), "", augment))
names(TidyMethods) <- c("Class", "`tidy`", "`glance`", "`augment`")
knitr::kable(TidyMethods)
View(augment_methods)
View(glance_methods)
tidy_methods
tidy_methods <- methods("tidy")
tidy_methods
library(broom)
library(dplyr)
data(Orange)
dim(Orange)
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
library(tidyverse)
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
fruit <- c("apple", "banana")
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
(weight_kg <- 55)
weight_kg <- 57.5
2.2 * weight_kg
weight_lb <- 2.2 * weight_kg
weight_kg <- 100
weight_lb
weight_lb <- 2.2 * weight_kg
weight_lb
weight_kg <- 100
weight_lb
getwd()
download.file(url="http://www.nec.go.kr/portal/cmm/fms/FileDown.do?atchFileId=FILE_000000000061613&fileSn=1&bbsId=", file=".")
download.file(url="http://www.nec.go.kr/portal/cmm/fms/FileDown.do?atchFileId=FILE_000000000061613&fileSn=1&bbsId=")
download.file(url="http://www.nec.go.kr/portal/cmm/fms/FileDown.do?atchFileId=FILE_000000000061613&fileSn=1&bbsId=", destfile = ".")
install.packages("rgdal")
res <- google_directions(origin = c(-37.8179746, 144.9668636),
destination = c(-37.81659, 144.9841),
mode = "walking",
key = "AIzaSyA-XNGlV930_VerH8EVP7vgmviSoVcrZz8")
library(googleway)
library(ggmap)
google_directions(origin = "Flinders Street Station, Melbourne",
destination = "MCG, Melbourne",
mode = "walking",
key = "AIzaSyAJ_RX2cEAvhs89cxMbyLQ4mCR_qOJejWo")
res <- google_directions(origin = c(-37.8179746, 144.9668636),
destination = c(-37.81659, 144.9841),
mode = "walking",
key = "AIzaSyA-XNGlV930_VerH8EVP7vgmviSoVcrZz8")
listviewer::jsonedit(res, mode="view")
res
res$routes
df <- res$routes
View(df)
? google_directions
# 1. 판교 테크노밸리 --------------------------------------------------
company <- data.frame(year=c("2012", "2013", "2014", "2015"),
num_company = c(634, 870, 1002, 1121))
employee <- data.frame(year=c("2012", "2013", "2014", "2015"),
num_emp = c(30801, 58188, 70577, 72820))
# 단위: 조
revenue <- data.frame(year=c("2013", "2014", "2015"),
revenue=c(54, 69, 70))
sml <- tibble(type=c("대기업", "중견기업", "중소-기타"),
`2013`=c(24, 64, 782),
`2014`=c(37, 99, 866),
`2015`=c(30, 54, 1037))
View(company)
View(employee)
View(revenue)
gallop_df <- read_csv("data/survey_gallop.csv")
real_df   <- read_csv("data/survey_real.csv")
rns_df    <- read_csv("data/survey_rns.csv")
jwi_df    <- read_csv("data/survey_jwi.csv")
survey_df <- gallop_df %>%
bind_rows(real_df) %>%
bind_rows(rns_df) %>%
bind_rows(jwi_df)
survey_df <- survey_df %>% mutate(주차 = factor(주차, levels=c("1월 1주차", "1월 2주차", "1월 3주차", "1월 4주차", "2월 1주차",
"2월 2주차", "2월 3주차", "2월 4주차", "3월 1주차", "3월 2주차",
"3월 3주차", "3월 4주차", "3월 5주차", "4월 1주차", "4월 2주차",
"4월 3주차", "4월 4주차", "5월 1주차"))) %>%
mutate(지지율 = 지지율/100)
# 3. 데이터 시각화 -------------------------------------------------------------------
survey_g <- ggplot(survey_df, aes(x=주차, y=지지율, group=interaction(조사업체,후보), color=후보)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text = element_text(size=9.5),
axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplotly(survey_g)
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
survey_candid_df <- survey_df %>% dplyr::select(주차, 후보, 지지율)
survey_candid_df %>% spread(후보, 지지율, -주차)
# 4. 데이터 표 -------------------------------------------------------------------
library(data.table)
survey_tbl <- dcast(setDT(survey_df), 주차 ~ 후보+조사업체, value.var =c("지지율"))
DT::datatable(survey_tbl) %>%
DT::formatPercentage(c(2:21), digits=1)
library(tidyverse)
library(rvest)
library(stringr)
library(plotly)
gallop_df <- read_csv("data/survey_gallop.csv")
real_df   <- read_csv("data/survey_real.csv")
rns_df    <- read_csv("data/survey_rns.csv")
jwi_df    <- read_csv("data/survey_jwi.csv")
survey_df <- gallop_df %>%
bind_rows(real_df) %>%
bind_rows(rns_df) %>%
bind_rows(jwi_df)
survey_df <- survey_df %>% mutate(주차 = factor(주차, levels=c("1월 1주차", "1월 2주차", "1월 3주차", "1월 4주차", "2월 1주차",
"2월 2주차", "2월 3주차", "2월 4주차", "3월 1주차", "3월 2주차",
"3월 3주차", "3월 4주차", "3월 5주차", "4월 1주차", "4월 2주차",
"4월 3주차", "4월 4주차", "5월 1주차"))) %>%
mutate(지지율 = 지지율/100)
# 3. 데이터 시각화 -------------------------------------------------------------------
survey_g <- ggplot(survey_df, aes(x=주차, y=지지율, group=interaction(조사업체,후보), color=후보)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text = element_text(size=9.5),
axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplotly(survey_g)
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
survey_candid_df <- survey_df %>% dplyr::select(주차, 후보, 지지율)
survey_candid_df %>% spread(후보, 지지율, -주차)
# 4. 데이터 표 -------------------------------------------------------------------
library(data.table)
survey_tbl <- dcast(setDT(survey_df), 주차 ~ 후보+조사업체, value.var =c("지지율"))
DT::datatable(survey_tbl) %>%
DT::formatPercentage(c(2:21), digits=1)
setwd("D:/docs/politics")
library(tidyverse)
library(rvest)
library(stringr)
library(plotly)
gallop_df <- read_csv("data/survey_gallop.csv")
real_df   <- read_csv("data/survey_real.csv")
rns_df    <- read_csv("data/survey_rns.csv")
jwi_df    <- read_csv("data/survey_jwi.csv")
survey_df <- gallop_df %>%
bind_rows(real_df) %>%
bind_rows(rns_df) %>%
bind_rows(jwi_df)
survey_df <- survey_df %>% mutate(주차 = factor(주차, levels=c("1월 1주차", "1월 2주차", "1월 3주차", "1월 4주차", "2월 1주차",
"2월 2주차", "2월 3주차", "2월 4주차", "3월 1주차", "3월 2주차",
"3월 3주차", "3월 4주차", "3월 5주차", "4월 1주차", "4월 2주차",
"4월 3주차", "4월 4주차", "5월 1주차"))) %>%
mutate(지지율 = 지지율/100)
# 3. 데이터 시각화 -------------------------------------------------------------------
survey_g <- ggplot(survey_df, aes(x=주차, y=지지율, group=interaction(조사업체,후보), color=후보)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text = element_text(size=9.5),
axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplotly(survey_g)
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
survey_candid_df <- survey_df %>% dplyr::select(주차, 후보, 지지율)
survey_candid_df %>% spread(후보, 지지율, -주차)
# 4. 데이터 표 -------------------------------------------------------------------
library(data.table)
survey_tbl <- dcast(setDT(survey_df), 주차 ~ 후보+조사업체, value.var =c("지지율"))
DT::datatable(survey_tbl) %>%
DT::formatPercentage(c(2:21), digits=1)
View(survey_df)
survey_df <- survey_df %>% mutate(주차 = factor(주차, levels=c("1월 1주차", "1월 2주차", "1월 3주차", "1월 4주차", "2월 1주차",
"2월 2주차", "2월 3주차", "2월 4주차", "3월 1주차", "3월 2주차",
"3월 3주차", "3월 4주차", "3월 5주차", "4월 1주차", "4월 2주차",
"4월 3주차", "4월 4주차", "5월 1주차"))) %>%
mutate(지지율 = 지지율/100) %>%
mutate(주차 = stringr::str_replace_all(주차, "차", ""))
survey_g <- ggplot(survey_df, aes(x=주차, y=지지율, group=interaction(조사업체,후보), color=후보)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text = element_text(size=9.5),
axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplotly(survey_g)
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.title = element_text(size=22)
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.title = element_text(size=22),
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.title = element_text(size=18),
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
strip.text = element_text(size=17),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
ggplot(survey_df, aes(x=주차, y=지지율, group=후보, color=후보)) +
geom_point() +
geom_line() +
facet_wrap(~조사업체) +
theme_minimal() +
theme(legend.position="none",
plot.title = element_text(size=18),
plot.caption=element_text(hjust=0,size=8),
plot.subtitle=element_text(face="italic"),
strip.text = element_text(size=14),
axis.text=element_text(size=7.5))+
labs(x="",y="",title="후보별 여론조사 지지율 추이",
caption="\n 데이터출처: 나무위키 여론조사(https://namu.wiki/w/제19대 대통령 선거/여론조사)",
subtitle="") +
scale_colour_manual(name="",
values=c(문재인="#065ce8",
홍준표="#ff0000",
안철수="#07f91f",
유승민="#00faff",
심상정="#f2ee09"))
